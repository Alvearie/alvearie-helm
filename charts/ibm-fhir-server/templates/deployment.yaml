apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fhir.fullname" . }}
  labels:
    app: {{ template "fhir.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fhir.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fhir.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: fhir-server-config
          configMap:
            name: {{ template "fhir.fullname" . }}-config
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.db.type "postgresql" }}
      initContainers:
        - name: wait-for-db-to-be-ready
          image: docker.io/bitnami/postgresql:13.4.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            privileged: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
          env:
            - name: PGHOST
              value: "{{ include "fhir.database.host" $ }}"
            - name: PGPORT
              value: "{{ include "fhir.database.port" $ }}"
            - name: PGUSER
              value: "{{ include "fhir.database.user" $ }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              until pg_isready; do
                echo "Waiting for DB ${PGUSER}@${PGHOST}:${PGPORT} to be up";
                sleep 15;
              done;
      {{- end }}
      containers:
        - name: {{ template "fhir.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 9443
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: fhir-server-config
              mountPath: /opt/ol/wlp/usr/servers/defaultServer/configDropins/overrides/datasources.xml
              subPath: datasources.xml
            - name: fhir-server-config
              mountPath: /opt/ol/wlp/usr/servers/defaultServer/config/default
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SEC_TLS_TRUSTDEFAULTCERTS
              value: "true"
            - name: TRACE_SPEC
              value: "*=info:com.ibm.fhir.*=info"
            - name: WLP_LOGGING_MESSAGE_FORMAT
              value: json
            - name: WLP_LOGGING_MESSAGE_SOURCE
              value: ""
            - name: WLP_LOGGING_CONSOLE_FORMAT
              value: json
            - name: WLP_LOGGING_CONSOLE_LOGLEVEL
              value: info
            - name: WLP_LOGGING_CONSOLE_SOURCE
              value: message,trace,accessLog,ffdc,audit
            - name: WLP_LOGGING_JSON_FIELD_MAPPINGS
              value: loglevel:level
            {{- if .Values.ingress.enabled }}
            - name: FHIR_HOSTNAME
              value: "{{ .Values.ingress.hostname }}"
            {{- end }}
            - name: FHIR_DB_HOSTNAME
              value: "{{ include "fhir.database.host" $ }}"
            - name: FHIR_DB_PORT
              value: "{{ include "fhir.database.port" $ }}"
            - name: FHIR_DB_NAME
              value: "{{ include "fhir.database.name" $ }}"
            - name: FHIR_DB_USER
              value: "{{ include "fhir.database.user" $ }}"
            - name: FHIR_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ include "fhir.database.secretName" $ }}"
                  key: "{{ include "fhir.database.secretKey" $ }}"
            {{- if .Values.db.apiKeySecretKey }}
            - name: FHIR_DB_APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.dbSecret }}
                  key: {{ .Values.db.apiKeySecretKey }}
            {{- else if .Values.db.apiKey }}
            - name: FHIR_DB_APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-db-secret
                  key: apiKey
            {{- end }}
            - name: FHIR_DB_SCHEMA
              value: {{ .Values.db.schema }}
            - name: FHIR_DB_SSL
              value: "{{ .Values.db.sslConnection }}"
            {{- if .Values.db.pluginName }}
            - name: FHIR_DB_PLUGIN
              value: {{ .Values.db.pluginName }}
            {{- end }}
            {{- if .Values.db.securityMechanism }}
            - name: FHIR_DB_SECURITY
              value: {{ .Values.db.securityMechanism }}
            {{- end }}
            - name: DS_MIN_POOL_SIZE
              value: "20"
            - name: DS_MAX_POOL_SIZE
              value: "100"
            - name: DS_AGED_TIMEOUT
              value: "-1"
            {{- if .Values.objectStorage.enabled }}
            - name: BATCH_DB_HOSTNAME
              value: "{{ include "fhir.database.host" $ }}"
            - name: BATCH_DB_PORT
              value: "{{ include "fhir.database.port" $ }}"
            - name: BATCH_DB_NAME
              value: "{{ include "fhir.database.name" $ }}"
            - name: BATCH_DB_USER
              value: "{{ include "fhir.database.user" $ }}"
            - name: BATCH_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ include "fhir.database.secretName" $ }}"
                  key: "{{ include "fhir.database.secretKey" $ }}"
            {{- if .Values.db.apiKeySecretKey }}
            - name: BATCH_DB_APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.dbSecret }}
                  key: {{ .Values.db.apiKeySecretKey }}
            {{- end }}
            {{- if .Values.db.apiKey }}
            - name: BATCH_DB_APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-db-secret
                  key: apiKey
            {{- end }}
            - name: BATCH_DB_SSL
              value: "{{ .Values.db.sslConnection }}"
            {{- if .Values.db.pluginName }}
            - name: BATCH_DB_PLUGIN
              value: {{ .Values.db.pluginName }}
            {{- end }}
            {{- if .Values.db.securityMechanism }}
            - name: BATCH_DB_SECURITY
              value: {{ .Values.db.securityMechanism }}
            {{- end }}
            {{- if .Values.objectStorage.objectStorageSecret }}
            - name: COS_LOCATION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.objectStorage.objectStorageSecret }}
                  key: {{ .Values.objectStorage.locationSecretKey }}
            - name: COS_ENDPOINT_INTERNAL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.objectStorage.objectStorageSecret }}
                  key: {{ .Values.objectStorage.endpointUrlSecretKey }}
            - name: COS_ENDPOINT_EXTERNAL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.objectStorage.objectStorageSecret }}
                  key: {{ .Values.objectStorage.endpointUrlSecretKey }}
            - name: COS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.objectStorage.objectStorageSecret }}
                  key: {{ .Values.objectStorage.accessKeySecretKey }}
            - name: COS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.objectStorage.objectStorageSecret }}
                  key: {{ .Values.objectStorage.secretKeySecretKey }}
            {{- else }}
            - name: COS_LOCATION
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-object-storage-secret
                  key: cos.location
            - name: COS_ENDPOINT_INTERNAL
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-object-storage-secret
                  key: cos.endpoint.url.internal
            - name: COS_ENDPOINT_EXTERNAL
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-object-storage-secret
                  key: cos.endpoint.url.external
            - name: COS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-object-storage-secret
                  key: cos.access.key
            - name: COS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-object-storage-secret
                  key: cos.secret.key
            {{- end }}
            {{- end }}
            {{- if .Values.fhirPasswordSecret }}
            - name: FHIR_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fhirPasswordSecret }}
                  key: {{ .Values.fhirUserPasswordSecretKey }}
            - name: FHIR_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fhirPasswordSecret }}
                  key: {{ .Values.fhirAdminPasswordSecretKey }}
            {{- else }}
            - name: FHIR_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-user-secret
                  key: fhir.user.password
            - name: FHIR_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fhir.fullname" . }}-user-secret
                  key: fhir.admin.password
            {{- end }}
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              {{- if .Values.security.smartEnabled }}
              - curl --fail -k -sS 'https://localhost:9443/fhir-server/api/v4/.well-known/smart-configuration'
              {{- else if .Values.security.oauthEnabled }}
              - curl --fail -k -sS 'https://localhost:9443/fhir-server/api/v4/metadata'
              {{- else }}
              - curl --fail -k -sS -u "fhiruser:${FHIR_USER_PASSWORD}" 'https://localhost:9443/fhir-server/api/v4/$healthcheck'
              {{- end }}
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
          livenessProbe:
            exec:
              command:
              - bash
              - -c
              - /opt/ol/wlp/bin/server status
            initialDelaySeconds: 36
            periodSeconds: 60
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 32
